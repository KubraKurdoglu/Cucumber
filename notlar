Target==> projedeki kodlarin kopyasini tutuyor

#day31

#Background==>Classlarımızda kullandığımız @Before gibi burada kullandığımız her scenario'dan önce Background yapısı çalışır
#Background koymasa idik, tum yazdigimiz herseyi ayni sayfada aratacakti. yani, SeleniumJavaSql seklinde anlatacakti.


 #Feature file'da birden fazla ürün aratmak için her seferinde yeni bir method oluşturmak gerekir.
  #Dolayısıyla stepdefinition class'ında çok fazla method oluşturmuş oluruz
  #Tek bir parametreli method oluşturup bunun üstesinden gelebiliriz.
     #Bunun için feature file'da aratmak istediğimiz metni " " tırnak içinde yazarsak stepdefinition class'ında bize
  #parametleri method oluşturur.

  #day32 ==> dryRun==> ile adimlar uyumlu mu uyumsuz mu diy ebakiyoruz

  // dryRun default olarak false'dur.
  // true dersek testlerimizi gercekte calistirmaz
  // sadece calistiriyormus gibi kontrol eder.
  // ornegin true'da sayfaya gitmez.
  // false yaparsak driver acilir ve sayfaya gider

  //plugin = {"pretty"},== seklinde yazarsak, konsolda scenario'lar ile birlikte bilgide gosterir.
  // monochrome = false==> pretty ile glen bilgilerin renkli olmasini saglar.
  // monochrome = true==> pretty ile gelen bilgilerin koyu renk olmasini saglar.
  //(plugin = {"pretty", "html:"}==> buraya "html" eklayerek raporlarimizi nerde gormek istedigimizi belirtebiliriz
  //htmlReport==> diye bir directory olusturup, path'ini "html:src/test/resources/features/htmlReport"==> path'ini bu
  //sekilde ekleriz !!!! adresin sonuna "/cucumber/html"==>eklersen hem isim vermis olursun, hemde "html" formati yaparsin.

  //"/cucumber/html"==> bu isme bir de her tags icin ek bir kelime ekleyebilirsin, cunku yoksa her yani tags de ustune yazar
  //"/cucumbertc3/html"

  //day33

  #burada Scenario outline kullanmadigi icin "Examples" yapisi kullanmadik.
    #ScenarioOutline yapisi daha rahattir, fakat bu yapiyi da gormemizi istedi hoca
    #cunku bu yapi da kullaniliyor.


    #DataTable; scenario'lardaki satır ve sütun için bir veri tablosu temsil eder.
  #Bunun için kullanılmak istenen her stepten sonra yukarıdaki örnekteki bir tablo yapısı oluştururuz.
  #ve bu stepin methodunu stepDefinition'da oluşturduğumuz zaman buradaki verileri alabilmemiz için
  #oluşturulan methoda DataTable parametresi eklenir.
  #Bu parametre ismi ile bir list oluşturulabilir.
  #yada direkt asList() methodu ile row'lara ulaşabiliriz.